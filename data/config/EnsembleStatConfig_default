////////////////////////////////////////////////////////////////////////////////
//
// Ensemble-Stat configuration file.
//
// For additional information, see the MET_BASE/config/README file.
//
////////////////////////////////////////////////////////////////////////////////

//
// Output model name to be written
//
model = "WRF";

//
// Output observation type to be written
//
obtype = "ANALYS";

////////////////////////////////////////////////////////////////////////////////

//
// Verification grid
//
regrid = {
   to_grid    = NONE;
   vld_thresh = 0.5;
   method     = NEAREST;
   width      = 1;
};

////////////////////////////////////////////////////////////////////////////////

//
// Ensemble product fields to be processed
//
ens = {
   ens_thresh = 1.0;
   vld_thresh = 1.0;

   field = [
      {
         name       = "APCP";
         level      = "A03";
         cat_thresh = [ >0.0, >=5.0 ];
      }
   ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Forecast and observation fields to be verified
//
fcst = {
   message_type = [ "ADPUPA" ];
   sid_exc      = [];
   ens_ssvar_bin_size = 1.0;
   ens_phist_bin_size = 0.05;

   field = [
      {
         name  = "APCP";
         level = [ "A03" ];
      }
   ];
}
obs = fcst;

////////////////////////////////////////////////////////////////////////////////

//
// Climatology mean data
//
climo_mean = {

   //
   // Climatology mean files.
   //
   file_name = [];

   //
   // field must be empty or the same length as fcst.field.
   //
   field = [];

   //
   // Method for regridding climatology data to the verification grid.
   //
   regrid = {
      vld_thresh = 0.5;
      method     = NEAREST;
      width      = 1;
   }

   //
   // Method for interpolating climatology to forecast valid time:
   //    NEAREST for data closest in time
   //    UW_MEAN for average of data before and after
   //    DW_MEAN for linear interpolation in time of data before and after
   //
   time_interp_method = DW_MEAN;

   //   
   // When searching climatology data, only consider times where the month
   // matches the forecast month.  Set match_day to TRUE or FALSE to define
   // whether the climatology day must also match.
   //    match_day = FALSE for monthly climatology
   //    match_day = TRUE  for daily climatology
   //
   match_day = FALSE;

   //
   // Time step of the climatology data in seconds.  Set to 60*60*6 for
   // 6-hourly data or 60*60 for hourly data.
   //
   time_step = 21600;
}

//
// Climatology standard deviation data
//
climo_stdev = climo_mean;

////////////////////////////////////////////////////////////////////////////////

//
// Point observation time window
//
obs_window = {
   beg = -5400;
   end =  5400;
}

////////////////////////////////////////////////////////////////////////////////

//
// Verification masking regions
//
mask = {
   grid    = [ "FULL" ];
   poly    = [];
   sid     = [];
};

////////////////////////////////////////////////////////////////////////////////

//
// Confidence interval settings
//
ci_alpha  = [ 0.05 ];

////////////////////////////////////////////////////////////////////////////////

//
// Interpolation methods
//
interp = {
   field      = BOTH;
   vld_thresh = 1.0;

   type = [
      {
         method = NEAREST;
         width  = 1;
      }
   ];
};

////////////////////////////////////////////////////////////////////////////////

//
// Statistical output types
//
output_flag = {
   rhist = BOTH;
   phist = BOTH;
   orank = BOTH;
   ssvar = BOTH;
};

////////////////////////////////////////////////////////////////////////////////

//
// Ensemble product output types
//
ensemble_flag = {
   mean      = TRUE;
   stdev     = TRUE; 
   minus     = TRUE;
   plus      = TRUE;
   min       = TRUE;
   max       = TRUE;
   range     = TRUE;
   vld_count = TRUE;
   frequency = TRUE;
   rank      = TRUE;
};

////////////////////////////////////////////////////////////////////////////////

//
// Random number generator
//
rng = {
   type = "mt19937";
   seed = "";
}

////////////////////////////////////////////////////////////////////////////////

duplicate_flag = NONE;
obs_quality    = [];
output_prefix  = "";
version        = "V5.1";

////////////////////////////////////////////////////////////////////////////////
