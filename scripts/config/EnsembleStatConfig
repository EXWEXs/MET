////////////////////////////////////////////////////////////////////////////////
//
// Ensemble-Stat configuration file.
//
// For additional information, see the MET_BASE/config/README file.
//
////////////////////////////////////////////////////////////////////////////////

//
// Output model name to be written
//
model = "WRF";

//
// Output observation type to be written
//
obtype = "MC_PCP";

////////////////////////////////////////////////////////////////////////////////

//
// Verification grid
//
regrid = {
   to_grid    = NONE;
   vld_thresh = 0.5;
   method     = NEAREST;
   width      = 1;
}

////////////////////////////////////////////////////////////////////////////////

//
// Ensemble product fields to be processed
//
ens = {
   ens_thresh = 1.0;
   vld_thresh = 1.0;

   field = [
      {
         name       = "APCP";
         level      = [ "A24" ];
         cat_thresh = [ >0.0, >=10.0 ];
      },
      {
         name       = "REFC";
         level      = [ "L0" ];
         cat_thresh = [ >=35.0 ];
         GRIB1_ptv  = 129;
      },
      {
         name       = "UGRD";
         level      = [ "Z10" ];
         cat_thresh = [ >=5.0 ];
      },
      {
         name       = "VGRD";
         level      = [ "Z10" ];
         cat_thresh = [ >=5.0 ];
      },
      {
         name       = "WIND";
         level      = [ "Z10" ];
         cat_thresh = [ >=5.0 ];
      }
   ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Forecast and observation fields to be verified
//
fcst = {
   message_type = [ "ADPSFC" ];
   sid_exc      = [];

   field = [
      {
         name               = "APCP";
         level              = [ "A24" ];
         ens_ssvar_bin_size = 0.1;
         ens_phist_bin_size = 0.05;
      }
   ];
}
obs = fcst;

////////////////////////////////////////////////////////////////////////////////

//
// Climatology mean data
//
climo_mean = {

   file_name = [];
   field     = [];

   regrid = {
      vld_thresh = 0.5;
      method     = NEAREST;
      width      = 1;
   }

   time_interp_method = DW_MEAN;
   match_day          = FALSE;
   time_step          = 21600;
}

////////////////////////////////////////////////////////////////////////////////

//
// Point observation time window
//
obs_window = {
   beg = -5400;
   end =  5400;
}

////////////////////////////////////////////////////////////////////////////////

//
// Verification masking regions
//
mask = {
   grid = [ "FULL" ];
   poly = [ "MET_BASE/poly/HMT_masks/huc4_1605_poly.nc",
            "MET_BASE/poly/HMT_masks/huc4_1803_poly.nc",
            "MET_BASE/poly/HMT_masks/huc4_1804_poly.nc",
            "MET_BASE/poly/HMT_masks/huc4_1805_poly.nc",
            "MET_BASE/poly/HMT_masks/huc4_1806_poly.nc" ];
   sid  = [];
}

////////////////////////////////////////////////////////////////////////////////

//
// Confidence interval settings
//
ci_alpha  = [ 0.05 ];

////////////////////////////////////////////////////////////////////////////////

//
// Interpolation methods
//
interp = {
   field      = BOTH;
   vld_thresh = 1.0;

   type = [
      {
         method = NEAREST;
         width  = 1;
      }
   ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Statistical output types
//
output_flag = {
   rhist = BOTH;
   phist = BOTH;
   orank = BOTH;
   ssvar = BOTH;
}

////////////////////////////////////////////////////////////////////////////////

//
// Ensemble product output types
//
ensemble_flag = {
   mean      = TRUE;
   stdev     = TRUE;
   minus     = TRUE;
   plus      = TRUE;
   min       = TRUE;
   max       = TRUE;
   range     = TRUE;
   vld_count = TRUE;
   frequency = TRUE;
   rank      = TRUE;
}

////////////////////////////////////////////////////////////////////////////////

//
// Random number generator
//
rng = {
   type = "mt19937";
   seed = "1";
}

////////////////////////////////////////////////////////////////////////////////

duplicate_flag = NONE;
obs_quality    = [];
output_prefix  = "";
version        = "V5.1";

////////////////////////////////////////////////////////////////////////////////
