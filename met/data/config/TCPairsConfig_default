////////////////////////////////////////////////////////////////////////////////
//
// Default TCPairs configuration file
//
////////////////////////////////////////////////////////////////////////////////

//
// ATCF file format reference:
//   http://www.nrlmry.navy.mil/atcf_web/docs/database/new/abrdeck.html
//

//
// Specify a comma-separated list of models to be used.
// An empty list indicates that all should be used.
//
// e.g. model = [ "AHW4", "AHWI" ];
//
model = [];

//
// Specify a comma-separated list of storm id's to be used:
//    2-letter basin, 2-digit cyclone number, 4-digit year
// An empty list indicates that all should be used.
//
// e.g. storm_id = [ "AL092011" ];
//
// This may also be set using basin, cyclone, and timing information below.
//
storm_id = [];

//
// Specify a comma-separated list of basins to be used.
// An empty list indicates that all should be used.
//   Valid basins: WP, IO, SH, CP, EP, AL, SL
//
// e.g. basin = [ "AL", "EP" ];
//
basin = [];

//
// Specify a comma-separated list of cyclone numbers (01-99) to be used.
// An empty list indicates that all should be used.
//
// e.g. cyclone = [ "01", "02", "03" ];
//
cyclone = [];

//
// Specify a comma-separated list of storm names to be used.
// An empty list indicates that all should be used.
//
// e.g. storm_name = [ "KATRINA" ];
//
storm_name = [];

//
// Specify a model initialization time window in YYYYMMDD[_HH[MMSS]] format
// or provide a list of specific initialization times to include or exclude.
// Tracks whose initial time meets the specified criteria will be used.
// An empty string indicates that all times should be used.
//
// e.g. init_beg = "20100101";
//      init_end = "20101231";
//      init_inc = [ "20101231_06" ];
//      init_exc = [ "20101231_00" ];
//
init_beg = "";
init_end = "";
init_inc = [];
init_exc = [];

//
// Specify a model valid time window in YYYYMMDD[_HH[MMSS]] format.
// Tracks for which all valid times fall within the time window will be used.
// An empty string indicates that all times should be used.
//
// e.g. valid_beg = "20100101";
//      valid_end = "20101231";
//
valid_beg = "";
valid_end = "";

//
// Specify a comma-separated list of model initialization hours to be used
// in HH[MMSS] format. An empty list indicates that all hours should be used.
//
// e.g. init_hour = [ "00", "06", "12", "18" ];
//
init_hour = [];

//
// Specify lat/lon polylines defining masking regions to be applied.
// Tracks whose initial location falls within init_mask will be used.
// Tracks for which all locations fall within valid_mask will be used.
//
// e.g. init_mask  = "MET_BASE/data/poly/EAST.poly";
//
init_mask  = "";
valid_mask = "";

//
// Specify whether the code should check for duplicates ATCF lines when
// building tracks.  Setting this to FALSE makes the parsing of tracks quicker.
//
// e.g. check_dup = FALSE;
//
check_dup = FALSE;

//
// Specify whether special processing should be performed for interpolated
// models with 12-hour spacing.  For model with a name ending in 'I' (e.g. AHWI)
// search for the corresponding track whose model name ends in '2' (e.g. AHW2)
// and merge it's track points into the interpolated model's track.
//
// e.g. interp12 = TRUE;
//
interp12 = TRUE;

//
// Specify how consensus forecasts should be defined:
//   name    = consensus model name
//   members = array of consensus member model names
//   requied = array of true/false for each member
//             if empty, default is false
//   min_req = minimum number of members required for the consensus
//
// e.g.
//    consensus = [
//       {
//          name     = "CON1";
//          members  = [ "MOD1", "MOD2", "MOD3" ];
//          required = [ true, false, false ];
//          min_req  = 2;
//       }
//    ];
//
consensus = [];

//
// Specify a comma-separated list of forecast lag times to be used in HH[MMSS]
// format.  For each ADECK track identified, a lagged track will be derived
// for each entry listed.
//
// e.g. lag_time = [ "06", "12" ];
//
lag_time = [];

//
// Specify comma-separated lists of CLIPER/SHIFOR baseline forecasts to be
// derived from the BEST and operational (CARQ) tracks.
// Derived from BEST tracks: BCLP, BCS5, BCD5, BCLA
// Derived from CARQ tracks: OCLP, OCS5, OCD5, OCDT
//
// e.g. base_baseline = [ "BCLP", "BCS5", "BCD5", "BCLA" ];
//      oper_baseline = [ "OCLP", "OCS5", "OCD5", "OCDT" ];
//
best_baseline = [];
oper_baseline = [];

//
// Specify whether only those track points common to both the ADECK and BDECK
// tracks should be written out.
//
// e.g. match_points = FALSE;
//
match_points = FALSE;

//
// Specify the NetCDF output of the gen_dland tool containing a gridded
// representation of the minimum distance to land.
//
dland_file = "MET_BASE/data/tc_data/dland_nw_hem_tenth_degree.nc";

//
// Specify an ASCII file containing watch/warning information to be used.
// At each track point, the most severe watch/warning status in effect,
// if any, will be written to the output.
//
watch_warn_file = "MET_BASE/data/tc_data/wwpts_us.txt";

//
// Indicate a version number for the contents of this configuration file.
// The value should generally not be modified.
//
version = "V4.1b6";

